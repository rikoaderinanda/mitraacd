<div class="modal fade" id="ModalRegistrasi" tabindex="-1" aria-labelledby="LoginModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-fullscreen-sm-down">
    <div class="modal-content rounded-4 border-0">
      <div class="home-cart mt-0">
        <div class="row">
          <!-- Header -->
          <div class="col-12">
            <div class="login-top position-relative text-center bg-primary text-white p-4 rounded-top-4">
              <button type="button" class="btn-close btn-close-white position-absolute top-0 end-0 m-3" data-bs-dismiss="modal" aria-label="Close"></button>
              <!-- Ilustrasi -->
              <img src="https://cdn-icons-png.flaticon.com/512/2922/2922510.png" 
                  alt="Biodata Illustration" 
                  class="img-fluid mb-3" 
                  style="max-height:40px;">

              <h5 class="fs-4 fw-bold mb-2">Biodata Mitra</h5>
              <p class="fs-7 mb-0 opacity-75 text-white">
                Kami membutuhkan beberapa keterangan tentang Anda, sobat.
              </p>
            </div>
          </div>

          <!-- Body -->
          <div class="col-12">
            <div class="login-bottom p-4">

              <!-- Progress Stepper -->
              <div class="progress mb-4" style="height: 6px;">
                <div id="wizardProgress" class="progress-bar bg-primary" style="width: 0%;"></div>
              </div>

              <!-- Step Content -->
              <div id="stepContent" class="position-relative">
                <!-- Step 1 -->
                <div class="wizard-step" id="step1">
                  @await Html.PartialAsync("_BiodataPribadi")
                </div>

                <!-- Step 2 -->
                <div class="wizard-step d-none" id="step2">
                  @await Html.PartialAsync("_MapAddress")
                </div>

                <!-- Step 3 -->
                <div class="wizard-step d-none" id="step3">
                  @await Html.PartialAsync("_VerifikasiWhatsapp")
                </div>
                <!-- Step 4: Foto Selfie -->
                <div id="step4" class="wizard-step d-none">
                  @await Html.PartialAsync("_FotoSelfie")
                </div>
                <!-- Step 5 -->
                <div class="wizard-step d-none" id="step5">
                  @await Html.PartialAsync("_FotoKTP")
                </div>

                <!-- Step 6 -->
                <div class="wizard-step d-none" id="step6">
                  @await Html.PartialAsync("_ResumeRegistrasi")
                </div>

              </div><!-- stepContent -->
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<script>
let dataStep1 = {};
let dataStep2 = {};
let dataStep3 = {};
let dataStep4 = {};
let dataStep5 = {};

let video = document.getElementById("cameraSelfie");
let previewImg = document.getElementById("previewSelfie");
let btnTake = document.getElementById("btnTakePhoto");
let btnRetake = document.getElementById("btnRetakePhoto");

let videoKTP = document.getElementById("cameraKTP");
let previewImgKTP = document.getElementById("previewKTP");
let PanelInputNik = document.getElementById("PanelInputNik");
let nikInput = document.getElementById("nikInput");

let btnTakeKTP = document.getElementById("btnTakePhotoKTP");
let btnRetakeKTP = document.getElementById("btnRetakePhotoKTP");

let namaLengkap = document.getElementById("namaLengkap");
let namaPanggilan = document.getElementById("namaPanggilan");

let streamTrack = null;

let map;
let marker;
window.AlamatPosisiSaatIni = AlamatPosisiSaatIni;
const btnMyLocation = document.getElementById("btnMyLocation");
const spinner = document.getElementById("spinnerLocation");
const btnText = document.getElementById("btnText");

document.addEventListener("DOMContentLoaded", function () {
  // Default tanggal lahir = 15 tahun sebelumnya, 1 Jan
  let today = new Date();
  let defaultYear = today.getFullYear() - 15;
  let defaultDate = `${defaultYear}-01-01`;
  document.getElementById("tanggalLahir").value = defaultDate;
  
  // Tampilkan step pertama
  nextStep(1, true);
  AlamatPosisiSaatIni();

  // Ambil Foto
  btnTake.addEventListener("click", () => {
    let canvas = document.createElement("canvas");
    let ctx = canvas.getContext("2d");

    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

    previewImg.src = canvas.toDataURL("image/png");
    previewImg.classList.remove("d-none");

    closeCamera();
    btnRetake.classList.remove("d-none");
  });

  // Ambil Ulang Foto
  btnRetake.addEventListener("click", () => {
    openCamera();
  });

  // Ambil FotoKTP
  btnTakeKTP.addEventListener("click", () => {
    let canvas = document.createElement("canvas");
    let ctx = canvas.getContext("2d");

    canvas.width = videoKTP.videoWidth;
    canvas.height = videoKTP.videoHeight;
    ctx.drawImage(videoKTP, 0, 0, canvas.width, canvas.height);

    previewImgKTP.src = canvas.toDataURL("image/png");
    previewImgKTP.classList.remove("d-none");
    PanelInputNik.classList.remove("d-none");

    closeCameraKTP();
    btnRetakeKTP.classList.remove("d-none");
  });

  // Ambil Ulang Foto KTP
  btnRetakeKTP.addEventListener("click", () => {
    openCameraKTP();
  });

  // Format otomatis untuk nomor WhatsApp
  document.getElementById("noWhatsapp").addEventListener("input", function() {
      let val = this.value.replace(/\D/g, ""); // hapus non-digit

      if (val.startsWith("0")) {
          val = "62" + val.substring(1);
      } else if (val.startsWith("62")) {
          // sudah benar
      } else if (val.startsWith("8")) {
          val = "62" + val;
      }

      if (val) {
          this.value = "+" + val;
      } else {
          this.value = "";
      }
  });

  btnMyLocation.addEventListener("click", () => {
      //console.log("test");
      if (navigator.geolocation) {
          // tampilkan spinner di tombol
          spinner.style.display = "inline-block";
          btnText.textContent = "Mengambil lokasi...";
          btnMyLocation.disabled = true;

          navigator.geolocation.getCurrentPosition(
          (pos) => {
              const userPos = {
              lat: pos.coords.latitude,
              lng: pos.coords.longitude,
              };
              marker.setPosition(userPos);
              map.setCenter(userPos);
              document.getElementById("inputMaps").value =userPos.lat + ", " + userPos.lng;

              // reset tombol
              spinner.style.display = "none";
              btnText.textContent = "üìç Lokasi Saya";
              btnMyLocation.disabled = false;
          },
          () => {
              alert("Gagal mengambil lokasi.");
              spinner.style.display = "none";
              btnText.textContent = "üìç Lokasi Saya";
              btnMyLocation.disabled = false;
          }
          );
      } else {
          alert("Browser tidak mendukung Geolocation");
      }
  });

  if (nikInput) {
    nikInput.addEventListener('input', function(e) {
      // hapus semua selain angka
      let value = e.target.value.replace(/\D/g, '');
      // batasi max 16 digit
      value = value.substring(0, 16);
      // sisipkan spasi setiap 4 digit
      let formatted = value.match(/.{1,4}/g);
      if (formatted) {
        e.target.value = formatted.join(' ');
      } else {
        e.target.value = '';
      }
    });
  }

});

// Perbaikan nextStep agar auto buka kamera di step 4

function nextStep(step, first = false) 
{
  $(".wizard-step").addClass("d-none");
  $("#step" + step).removeClass("d-none");

  let totalSteps = $(".wizard-step").length;
  let percent = (step / totalSteps) * 100;
  $("#wizardProgress").css("width", percent + "%");

  // Jika bukan step 4 ‚Üí tutup kamera
  
  if (step < 4 && step > 5) {
    closeCamera();
  }

  // Jika step 4 ‚Üí auto buka kamera
  if (step === 4) {
    let ada = false;
    const previewSelfie = document.getElementById("previewSelfie");
    // cek apakah preview tampil & punya src (foto sudah diambil)
    if (previewSelfie.classList.contains("d-none") || !previewSelfie.src || previewSelfie.src === window.location.href) {
      ada = true;
    }

    if(ada){
      openCamera();
    }
  }

  if (step === 5) {
    let ada = false;
    const previewKTP = document.getElementById("previewKTP");
    // cek apakah preview tampil & punya src (foto sudah diambil)
    if (previewKTP.classList.contains("d-none") || !previewKTP.src || previewKTP.src === window.location.href) {
      ada = true;
    }

    if(ada){
      openCameraKTP();
    }
  }

  // Isi konfirmasi di step 6
  if (step === 6) {
      ResumeData();
  }
  
}

async function validateStep1() {
  let isValid = true;

  // ambil semua input
  const namaLengkap = document.getElementById("namaLengkap");
  const namaPanggilan = document.getElementById("namaPanggilan");
  const jenisKelamin = document.getElementById("jenisKelamin");
  const tanggalLahir = document.getElementById("tanggalLahir");

  // reset state
  [namaLengkap, namaPanggilan, jenisKelamin, tanggalLahir].forEach(el => {
    el.classList.remove("is-invalid");
  });

  // cek satu per satu
  if (namaLengkap.value.trim() === "") {
    namaLengkap.classList.add("is-invalid");
    isValid = false;
  }

  // Validasi namaPanggilan
  const panggilanValue = namaPanggilan.value.trim();
  
  if (panggilanValue === "")
  {
    namaPanggilan.classList.add("is-invalid");
    isValid = false;
  }

  if (jenisKelamin.value.trim() === "") {
    jenisKelamin.classList.add("is-invalid");
    isValid = false;
  }
  if (tanggalLahir.value.trim() === "") {
    tanggalLahir.classList.add("is-invalid");
    isValid = false;
  }

  if(isValid) 
  {
    const regexPanggilan = /^[A-Za-z]+$/; // hanya huruf tanpa spasi
    if (!regexPanggilan.test(panggilanValue)) {
      showToast("Nama Panggilan harus 1 kata, hanya huruf tanpa spasi");
      isValid = false;
    }
  }

  if(isValid) 
  {
    let _UserId = Storage.get('userId');
    let data = {
      id:_UserId,
      namaLengkap: namaLengkap.value,
      namaPanggilan: namaPanggilan.value
    }
    const result = await cekNamaApi(data);
    if (result) {
        showToast(result.message)
        isValid = false;
    }
  }

  if (isValid) 
  {
    nextStep(2);
  }
}

async function validateStep2() {
  const alamat = document.getElementById("alamat");
  let isValid = true;
  // cek satu per satu
  if (alamat.value.trim() === "") {
    alamat.classList.add("is-invalid");
    showToast("Silahkan isi alamat lengkap");
    isValid = false;
  }

  if (isValid) 
  {
    nextStep(3);
  }
}

function prevStep(step) {
  nextStep(step);
}


function kirimKode() {
  let noWa = $("#noWhatsapp").val();
  if (!noWa) return showToast("Masukkan nomor WhatsApp terlebih dahulu.");
  // TODO: API kirim kode
  //alert("Kode verifikasi telah dikirim ke " + noWa);
  showToast("Kode verifikasi telah dikirim ke " + noWa);
}

function verifikasiKode() {
  let kode = $("#kodeVerifikasi").val();
  if (!kode) return showToast("Masukkan kode verifikasi.");
  // TODO: API cek kode
  //alert("Verifikasi berhasil!");
  nextStep(4);
}



// Fungsi buka kamera
async function openCamera() {
  try {
    let stream = await navigator.mediaDevices.getUserMedia({ video: true });
    video.classList.remove("d-none");
    btnTake.classList.remove("d-none");
    document.getElementById("faceFrame").classList.remove("d-none");

    video.srcObject = stream;
    streamTrack = stream.getTracks()[0];

    // Reset tampilan
    previewImg.classList.add("d-none");
    btnRetake.classList.add("d-none");
  } catch (err) {
    alert("Kamera tidak dapat diakses: " + err.message);
  }
}

// Fungsi tutup kamera
function closeCamera() {
  if (streamTrack) {
    streamTrack.stop();
    streamTrack = null;
  }
  video.classList.add("d-none");
  btnTake.classList.add("d-none");
  document.getElementById("faceFrame").classList.add("d-none");
}

// Fungsi buka kamera
async function openCameraKTP() {
  try {
    let stream = await navigator.mediaDevices.getUserMedia({ video: true });
    videoKTP.classList.remove("d-none");
    btnTakeKTP.classList.remove("d-none");
    document.getElementById("KTPFrame").classList.remove("d-none");

    videoKTP.srcObject = stream;
    streamTrack = stream.getTracks()[0];

    // Reset tampilan
    previewImgKTP.classList.add("d-none");
    PanelInputNik.classList.add("d-none");
    btnRetakeKTP.classList.add("d-none");
  } catch (err) {
    alert("Kamera tidak dapat diakses: " + err.message);
  }
}

// Fungsi tutup kamera
function closeCameraKTP() {
  if (streamTrack) {
    streamTrack.stop();
    streamTrack = null;
  }
  videoKTP.classList.add("d-none");
  btnTakeKTP.classList.add("d-none");
  document.getElementById("KTPFrame").classList.add("d-none");
}

function validatasiSelfie() {
    let isValid = true;
    const previewSelfie = document.getElementById("previewSelfie");

    // cek apakah preview tampil & punya src (foto sudah diambil)
    if (previewSelfie.classList.contains("d-none") || !previewSelfie.src || previewSelfie.src === window.location.href) {
        //alert("Silakan ambil foto selfie terlebih dahulu sebelum melanjutkan.");
        showToast("Silakan ambil foto selfie terlebih dahulu sebelum melanjutkan.");
        isValid = false;
    }
    
    if(isValid){
      nextStep(5);
    }
}

function validatasiKTP() {
    let isValid = true;
    const previewSelfie = document.getElementById("previewKTP");
    // reset state
    [nikInput].forEach(el => {
      el.classList.remove("is-invalid");
    });

    // cek apakah preview tampil & punya src (foto sudah diambil)
    if (previewSelfie.classList.contains("d-none") || !previewSelfie.src || previewSelfie.src === window.location.href) {
        showToast("Silakan ambil foto KTP terlebih dahulu sebelum melanjutkan.");
        isValid = false;
    }

    if (nikInput.value.trim() === "") {
        nikInput.classList.add("is-invalid");
        isValid = false;
    }
    
    if(isValid){
      nextStep(6);
    }
}

function ResumeData() {
  var html = `
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-person-fill text-primary me-2"></i><strong>Nama Lengkap</strong></span>
      <span>${$("#namaLengkap").val()}</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-person-badge-fill text-primary me-2"></i><strong>Nama Panggilan</strong></span>
      <span>${$("#namaPanggilan").val()}</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-gender-ambiguous text-primary me-2"></i><strong>Jenis Kelamin</strong></span>
      <span>${$("#jenisKelamin").val()}</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-calendar-event text-primary me-2"></i><strong>Tanggal Lahir</strong></span>
      <span>${$("#tanggalLahir").val()}</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-geo-alt-fill text-primary me-2"></i><strong>Alamat</strong></span>
      <span class="text-end" style="max-width: 50%;">${$("#alamat").val()}</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-map text-primary me-2"></i><strong>Koordinat</strong></span>
      <span>${$("#inputMaps").val()}</span>
    </li>
    <li class="list-group-item">
      <i class="bi bi-geo-fill text-primary me-2"></i><strong>Wilayah</strong><br>
      <span class="ms-4 text-muted small">${$("#wilayah").text()}</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-whatsapp text-success me-2"></i><strong>No WhatsApp</strong></span>
      <span>${$("#noWhatsapp").val()}</span>
    </li>
    <li class="list-group-item text-center">
      <i class="bi bi-camera-fill text-primary me-2"></i><strong>Foto Selfie</strong><br>
      <img src="${$("#previewSelfie").attr("src")}" class="img-thumbnail mt-2" style="max-height:120px; border-radius:12px;">
    </li>
    <li class="list-group-item text-center">
      <i class="bi bi-credit-card-2-front text-primary me-2"></i><strong>Foto KTP</strong><br>
      <img src="${$("#previewKTP").attr("src")}" class="img-thumbnail mt-2" style="max-height:120px; border-radius:12px;">
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      <span><i class="bi bi-card-text text-primary me-2"></i><strong>NIK</strong></span>
      <span>${$("#nikInput").val()}</span>
    </li>
  `;
  $("#listResume").html(html);
}

function collectData(_id) {
    let data = {
        id:_id,
        namaLengkap: $("#namaLengkap").val(),
        namaPanggilan: $("#namaPanggilan").val(),
        jenisKelamin: $("#jenisKelamin").val(),
        tanggalLahir: $("#tanggalLahir").val(),
        alamat:
        {
          alamat: $("#alamat").val(),
          koordinat: $("#inputMaps").val(),
          wilayah: $("#wilayah").text()
        },
        noWhatsapp: $("#noWhatsapp").val(),
        nik: $("#nikInput").val().replace(/\s/g, ''), // hapus spasi
        fotoSelfie: $("#previewSelfie").attr("src"), // ambil base64 / url foto
        fotoKTP: $("#previewKTP").attr("src")        // ambil base64 / url foto
  };
  return data;
}

function SimpanMitraDataReg() {
    let _UserId = Storage.get('userId');
    let data = collectData(_UserId);

    Swal.fire({
        title: 'Konfirmasi Simpan',
        text: "Apakah Anda yakin ingin menyimpan data ini?",
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#198754',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Ya, Simpan',
        cancelButtonText: 'Batal'
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                title: "Menyimpan Data...",
                text: "Mohon tunggu sebentar.",
                allowOutsideClick: false,
                didOpen: () => Swal.showLoading()
            });

            // proses upload selfie lalu KTP
            uploadSelfie(_UserId)
                .then((resSelfie) => {
                    // tangkap hasil upload selfie
                    data.fotoSelfie = {
                        Id: resSelfie.data.idTask || _UserId,
                        Url: resSelfie.data.url,
                        PublicId: resSelfie.data.publicId
                    };

                    // lanjut upload KTP
                    return uploadKTP(_UserId);
                })
                .then((resKtp) => {
                    // tangkap hasil upload KTP
                    data.fotoKTP = {
                        Id: resKtp.data.idTask || _UserId,
                        Url: resKtp.data.url,
                        PublicId: resKtp.data.publicId
                    };
                    // simpan data akhir
                    return SimpanDataAkhir(data);
                })
                .then(() => {
                    Swal.fire("‚úÖ Berhasil!", "Data dan foto berhasil disimpan.", "success");
                    window.location.href = '@Url.Action("Index","Home")';
                })
                .catch((err) => {
                    console.error(err);
                    Swal.fire("‚ùå Gagal!", err || "Terjadi kesalahan saat menyimpan data.", "error");
                });
        }
    });
}

function SimpanDataAkhir(data) {
    return new Promise((resolve, reject) => {
        console.log("Mengirim data akhir:", data);
        callApi({
            url: '/api/Auth/SimpanBiodataMitra',
            method: 'POST',
            data: data, // ‚úÖ pakai data dari parameter
            success: function (res) {
                console.log("Respon simpan biodata:", res);
                resolve(res);
            },
            error: function (err) {
                console.error("Error simpan biodata:", err);
                reject(err);
            },
            onBeforeSend: function () {
                // misal disable tombol simpan
                //$("#btnSimpan").prop("disabled", true).text("Menyimpan...");
            },
            onComplete: function () {
                //$("#btnSimpan").prop("disabled", false).text("üíæ Simpan");
            }
        });
    });
}

function uploadSelfie(Id) {
    return new Promise((resolve, reject) => {
        const base64 = $("#previewSelfie").attr("src");
        if (!base64) return reject("Foto Selfie belum diambil.");

        const blob = base64ToBlob(base64);
        const file = new File([blob], "selfie.jpg", { type: blob.type });

        const formData = new FormData();
        formData.append("Id", Id);
        formData.append("File", file);

        callApi({
            url: "/api/Cloudinary/UploadSelfiPhotoRegistrasi",
            method: "POST",
            data: formData,
            contentType: false,
            success: function (res) {
                console.log("Upload selfie berhasil:", res.data);
                resolve(res);
            },
            error: function () {
                reject("Upload foto selfie gagal.");
            }
        });
    });
}

function uploadKTP(Id) {
    return new Promise((resolve, reject) => {
        const base64 = $("#previewKTP").attr("src");
        if (!base64) return reject("Foto KTP belum diambil.");

        const blob = base64ToBlob(base64);
        const file = new File([blob], "ktp.jpg", { type: blob.type });

        const formData = new FormData();
        formData.append("Id", Id);
        formData.append("File", file);

        callApi({
            url: "/api/Cloudinary/UploadKTP",
            method: "POST",
            data: formData,
            contentType: false,
            success: function (res) {
                console.log("Upload KTP berhasil:", res.data);
                resolve(res);
            },
            error: function () {
                reject("Upload foto KTP gagal.");
            }
        });
    });
}

</script>
