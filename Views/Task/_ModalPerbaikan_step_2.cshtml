<style>
  /* === ANIMASI MODAL === */
  .modal.fade .modal-dialog {
    transition: all 0.4s ease-in-out;
    transform: translateY(40px);
    opacity: 0;
  }
  .modal.fade.show .modal-dialog {
    transform: translateY(0);
    opacity: 1;
  }
</style>

<div class="modal fade" id="ModalPerbaikan_step_2" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-fullscreen-sm-down">
    <div class="modal-content shadow-lg border-0 rounded-4">
      
      <!-- Header -->
      <div class="modal-header text-white rounded-top-4">
        <h5 class="modal-title"><i class="bi bi-tools me-2"></i>Pengecekan Lanjutan</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>

      <!-- Body -->
      <div class="modal-body p-4 bg-light">
        <div class="container mt-3" id="PengecekanLanjutanContainer_fix">
          <h5 class="fw-bold mb-3">📋 Pengecekan Lanjutan</h5>

          <div id="kerusakanList_fix"></div>

          <!-- Total harga -->
          <div id="totalHarga_fix" class="alert alert-info mt-3 fw-bold text-center" style="display:none;">
            💰 Total Estimasi: Rp 0
          </div>

          <div class="mt-3">
            <button class="btn btn-outline-primary btn-sm" onclick="addKerusakan_fix()">
              ➕ Tambah Kerusakan
            </button>
          </div>

          <div class="mt-4">
            <button class="btn btn-success w-100" onclick="submitPengecekanLanjutan_fix()">
              💾 Buat Penawaran
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
let kerusakanList_fix = [];
let currentCamera_fix = "environment"; // default: belakang
let Id_Perbaikan_2 = null;

$('#ModalPerbaikan_step_2').on('show.bs.modal', function (e) {
  // Ambil ID task (dari tombol pemicu atau atribut data)
  Id_Perbaikan_2 = $(this).data("id");
  if (e.relatedTarget) {
    Id_Perbaikan_2 = $(e.relatedTarget).data("id");
  }

  // 🔹 RESET SEMUA DATA
  kerusakanList_fix = [];
  const container = document.getElementById("kerusakanList_fix");
  container.innerHTML = ""; // hapus semua elemen input sebelumnya

  // 🔹 Sembunyikan total harga
  const totalDiv = document.getElementById("totalHarga_fix");
  totalDiv.style.display = "none";
  totalDiv.innerHTML = `💰 Total Estimasi: Rp 0`;

  // 🔹 Aktifkan kembali semua input dan tombol
  $('input, textarea, button').prop('disabled', false);

  console.log("🧹 Semua input telah direset untuk modal Pengecekan Lanjutan. ID Task:", Id_Perbaikan_2);
});


// 🔹 Tambah item baru
function addKerusakan_fix() {
  const index = kerusakanList_fix.length;
  const container = document.createElement("div");
  container.className = "card p-3 mt-3 shadow-sm";
  container.id = `kerusakanItem_${index}`;

  container.innerHTML = `
    <div class="d-flex justify-content-between align-items-center mb-2">
      <h6 class="fw-bold text-primary">Kerusakan #${index + 1}</h6>
      <button type="button" class="btn btn-sm btn-danger" onclick="removeKerusakan_fix(${index})">🗑 Hapus</button>
    </div>

    <div class="mb-2 text-center">
      <video id="cameraPreview_${index}" autoplay playsinline style="width: 100%; max-width: 300px; border-radius: 8px; display:none;"></video>
      <img id="photoPreview_${index}" src="" alt="Preview Foto" class="img-fluid rounded mb-2" style="max-width: 300px; display:none;">
      <div>
        <button class="btn btn-outline-secondary btn-sm" onclick="startCamera_fix(${index})">📷 Ambil Foto</button>
      </div>
    </div>

    <input type="hidden" id="photoData_${index}" />

    <div class="mb-2">
      <label class="form-label">Deskripsi Kerusakan</label>
      <textarea id="deskripsi_${index}" class="form-control form-control-sm" rows="2" placeholder="Contoh: Pipa bocor di sambungan kanan"></textarea>
    </div>

    <div class="mb-2">
      <label class="form-label">Rekomendasi</label>
      <textarea id="rekomendasi_${index}" class="form-control form-control-sm" rows="2" placeholder="Contoh: Ganti pipa ½ inch dan sealant ulang"></textarea>
    </div>

    <div class="mb-2">
      <label class="form-label">Harga Estimasi (Rp)</label>
      <input type="text" id="harga_${index}" class="form-control form-control-sm text-end" 
       placeholder="0" oninput="formatHarga_fix(this); updateTotalHarga_fix();">

    </div>
  `;

  document.getElementById("kerusakanList_fix").appendChild(container);
  kerusakanList_fix.push({ foto: "", deskripsi: "", rekomendasi: "", harga: "" });
  updateTotalHarga_fix();
}


// 🔹 Format input harga dengan separator ribuan
function formatHarga_fix(el) {
  let value = el.value.replace(/\D/g, ""); // ambil hanya angka
  if (!value) {
    el.value = "";
    return;
  }

  const formatted = new Intl.NumberFormat('id-ID').format(value);
  el.value = formatted;
}

// 🔹 Hapus item
function removeKerusakan_fix(index) {
  document.getElementById(`kerusakanItem_${index}`).remove();
  kerusakanList_fix[index] = null;
  updateTotalHarga_fix();
}

// 🔹 Update total harga
function updateTotalHarga_fix() {
  let total = 0;
  kerusakanList_fix.forEach((_, i) => {
    const input = document.getElementById(`harga_${i}`);
    if (input && input.value) {
      const numeric = parseFloat(input.value.replace(/\./g, "")) || 0;
      total += numeric;
    }
  });

  const totalDiv = document.getElementById("totalHarga_fix");
  if (total > 0) {
    totalDiv.style.display = "block";
    totalDiv.innerHTML = `💰 Total Estimasi: <b>Rp ${total.toLocaleString('id-ID')}</b>`;
  } else {
    totalDiv.style.display = "none";
  }
}

// 🔹 Ambil foto
async function startCamera_fix(index) {
  const video = document.getElementById(`cameraPreview_${index}`);
  const img = document.getElementById(`photoPreview_${index}`);
  const hiddenInput = document.getElementById(`photoData_${index}`);

  let stream = null;

  async function openCamera() {
    try {
      // Minta akses kamera berdasarkan arah yang aktif
      stream = await navigator.mediaDevices.getUserMedia({
        video: { facingMode: currentCamera_fix }
      });

      Swal.fire({
        title: '📸 Ambil Foto Kerusakan',
        html: `
          <video id="cam_${index}" autoplay playsinline style="width:100%;border-radius:8px;"></video>
          <div class="mt-3 d-flex justify-content-between">
            <button id="switchCamBtn_${index}" class="btn btn-outline-secondary btn-sm">
              🔄 Ganti Kamera
            </button>
            <button id="takePhotoBtn_${index}" class="btn btn-primary btn-sm">
              📷 Ambil Foto
            </button>
          </div>
        `,
        showConfirmButton: false,
        showCancelButton: true,
        didOpen: () => {
          const modalVideo = document.getElementById(`cam_${index}`);
          modalVideo.srcObject = stream;

          // 🔄 tombol ganti kamera
          document.getElementById(`switchCamBtn_${index}`).addEventListener('click', async () => {
            currentCamera_fix = (currentCamera_fix === "environment") ? "user" : "environment";
            stream.getTracks().forEach(t => t.stop());
            await openCamera(); // buka ulang kamera
          });

          // 📷 tombol ambil foto
          document.getElementById(`takePhotoBtn_${index}`).addEventListener('click', () => {
            const canvas = document.createElement('canvas');
            canvas.width = 640;
            canvas.height = 480;
            const ctx = canvas.getContext('2d');
            ctx.drawImage(modalVideo, 0, 0, canvas.width, canvas.height);

            const base64 = canvas.toDataURL('image/jpeg');
            hiddenInput.value = base64;
            img.src = base64;
            img.style.display = 'block';
            video.style.display = 'none';

            stream.getTracks().forEach(t => t.stop());
            Swal.close();
          });
        },
        willClose: () => {
          if (stream) stream.getTracks().forEach(t => t.stop());
        }
      });
    } catch (err) {
      console.error("Camera error:", err);
      Swal.fire('⚠️ Gagal membuka kamera', err.message, 'error');
    }
  }

  openCamera();
}


// 🔹 Submit ke server
async function submitPengecekanLanjutan_fix() {
  const dataList = [];

  for (let i = 0; i < kerusakanList_fix.length; i++) {
    if (!kerusakanList_fix[i]) continue;
    const foto = document.getElementById(`photoData_${i}`).value;
    const deskripsi = document.getElementById(`deskripsi_${i}`).value.trim();
    const rekomendasi = document.getElementById(`rekomendasi_${i}`).value.trim();
    const harga = document.getElementById(`harga_${i}`).value.trim();

    if (!foto || !deskripsi || !rekomendasi || !harga) {
      Swal.fire('⚠️ Lengkapi Data', `Kerusakan #${i + 1} belum lengkap.`, 'warning');
      return;
    }

    dataList.push({
      id: i + 1,
      fotoKerusakan: foto,
      deskripsi,
      rekomendasi,
      harga: parseFloat(harga.replace(/\./g, ""))
    });
  }

  if (dataList.length === 0) {
    Swal.fire('⚠️ Tidak ada data', 'Tambahkan minimal satu data kerusakan.', 'warning');
    return;
  }

  // Nonaktifkan semua input sementara
  $('input, textarea, button').prop('disabled', true);

  // Tampilkan progress bar SweetAlert
  let progress = 0;
  const total = dataList.length;

  Swal.fire({
    title: '⏳ Mengunggah Data...',
    html: `
      <div style="width:100%;background:#eee;border-radius:10px;overflow:hidden;height:15px;margin-top:10px;">
        <div id="progressBar_fix" style="height:15px;width:0%;background:#4caf50;"></div>
      </div>
      <div id="progressText_fix" class="mt-2 fw-bold text-secondary">0%</div>
      <small class="text-muted">Mengunggah ${total} item...</small>
    `,
    allowOutsideClick: false,
    showConfirmButton: false,
    didOpen: () => {
      Swal.showLoading();
    }
  });

  try {
    // Simulasi progress lokal sebelum respons API selesai
    const progressInterval = setInterval(() => {
      if (progress < 95) {
        progress += Math.random() * 10;
        if (progress > 95) progress = 95;
        updateProgressBar_fix(progress);
      }
    }, 400);

    // Kirim ke API
    await callApi({
      url: '/api/Task/SubmitPengecekanLanjutan_Perbaikan',
      method: 'POST',
      data: { id_task: Id_Perbaikan_2, list: dataList },
      contentType: 'application/json',
      success: function (res) {
        clearInterval(progressInterval);
        updateProgressBar_fix(100);

        setTimeout(() => {
          LoadListTask(hari, status);
          Swal.fire('✅ Berhasil!', 'Data pengecekan lanjutan berhasil disimpan.', 'success');
          $('#ModalPerbaikan_step_2').modal('hide');
          $('input, textarea, button').prop('disabled', false);
        }, 600);
      },
      error: function (err) {
        clearInterval(progressInterval);
        Swal.fire('❌ Gagal!', 'Terjadi kesalahan saat menyimpan data.', 'error');
        $('input, textarea, button').prop('disabled', false);
      }
    });
  } catch (ex) {
    console.error("🔥 Error submit:", ex);
    Swal.fire('❌ Gagal!', 'Tidak dapat menghubungi server.', 'error');
    $('input, textarea, button').prop('disabled', false);
  }
}

// Fungsi bantu untuk update progress bar
function updateProgressBar_fix(percent) {
  const bar = document.getElementById('progressBar_fix');
  const text = document.getElementById('progressText_fix');
  if (bar && text) {
    bar.style.width = percent + '%';
    text.innerText = Math.floor(percent) + '%';
  }
}

</script>
